import textwrap
import unittest
from typing import List
from run2 import solve


class TestMazeRobots(unittest.TestCase):
    def grid_input(self, input_str: str) -> int:
        """
        Преобразует текстовое представление лабиринта в сетку и вызывает solve.
        """
        grid = [
            list(line)
            for line in textwrap.dedent(input_str).strip().splitlines()
        ]
        return solve(grid)

    def test_all_cases(self):
        """
        Проверяет корректность работы функции solve для разных лабиринтов:
        """
        cases: List[tuple[str, str, int]] = [
            ("example1", """
             #######
             #a.#Cd#
             ##@#@##
             #######
             ##@#@##
             #cB#Ab#
             #######
             """, 8),

            ("example2", """
             ###############
             #d.ABC.#.....a#
             ######@#@######
             ###############
             ######@#@######
             #b.....#.....c#
             ###############
             """, 24),

            ("example4", """
             @@@..
             #####
             .....
             @A..a
             """, 6),

            ("example5", """
             @@@##
             #####
             .a.#B
             @#.Ab
             """, 6),

            ("example6", """
             @@@##
             ....b
             .a.#B
             @#.A.
             """, 5),

            ("example7", """
             @@@.c
             .....
             .a.#B
             @#...
             """, 4),

            ("one_step", """
             @a....@
             .......
             @.....@
             """, 1),

            ("zero_step", """
             @@
             @@
             """, 0),

            ("line1", """
             @@@@
             """, 0),

            ("line2", """
             @@@@aAbBC
             """, 3),

            ("no_keys", """
             #####
             #@.@#
             #...#
             #@.@#
             #####
             """, 0),

            ("one_key_center", """
             #####
             #@..@#
             #.a.#
             #@..@#
             #####
             """, 2),

            ("key_behind_door_accessible", """
             #####
             #@A@#
             #a.@#
             #@..#
             #####
             """, 1),

            ("2A_door", """
             @..ABc##
             .#######
             .######b
             a##@@##A
             ######A@
             """, 13),

            ("more_doors", """
             @aAAAAAAbBCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZcAAAAAA@@@
             """, 15),

            ("more_doors", """
             @aAb#@@#@AABBc
             """, 8),

            ("for_A*", """
             @@@###################
             ######################
             @..#...#...#...#....a.
             .#.#.#.#.#.#.#.#.####.
             .#.#.#.#.#.#.#.#.####.
             .#.#.#.#.#.#.#.#.####.
             .#...#...#...#...####.
             .####################.
             ......................
             """, 34),

            ("many_keys", """
             #############
             #DcBa.#.GhKl#
             #.###@#@#I###
             #e#d#####j#k#
             ###C#@#@###J#
             #fEbA.#.FgHi#
             #############
             """, 32),

            # ("big_grid", """
            # #################################################################################
            # #...#.......#....a..#...........#..e....#.....#...#...#...........#.............#
            # #.#.#.#####.#.#####.#.#######.###.###.#.#.###.#.#.###.#.#########.#.###.#######.#
            # #.#.#.#.#...#.#.K...#...#...#.....#.#.#.#.#.....#.#...#t......#...#.#...#.......#
            # #.###B#.#.#.#.#.#######.###.#######.#.###.#######.#.#########.#.#####.###.#######
            # #.#q..#.#.#.#.#...#.....#...#.......#...#...#.#...#.........#.#.......#.#.#.....#
            # #.#.###.#.#.#.###.#.#####.#.#.#####.###.###.#.#.#####.#######.#########.#.###.#.#
            # #...#...#.#.#...#.#.......#...#.....#...#...#.........#.....#.......#.#...#m..#.#
            # #.#####.#.#####.#.#######.#########.#.###F#############.###.###.###.#.#.###.#####
            # #...#...#.......#.......#.#......h#.#...#.#.....#.......#.....#.#...#.#.#.......#
            # ###.#.###########.#####.#.#.#####.#####.#.#.###.#.#####.#####.#.#.###G#.###.###.#
            # #.#.#.......#...#...#...#.#...J.#.#.....#.#...#.#.....#.#...#.#.#.#...#...#...#.#
            # #.#.#####.###.#.###.#####.#####.#.#.###.#.###.#.#####.#.#.#.#.###.#.#.###.#####S#
            # #w#...#...#...#...#...#...#...#.#...#...#.#...#.....#.#.#.#.#.....#.#...#.......#
            # #.###.#.###.#####.###.#.#####.#.#####.###.#.###.###.#.###.#.#######.###.#######.#
            # #...#...#...#.....#...#.#...#.#...#.#.#.#.#.#.#.#...#.....#...#...#.#.#.........#
            # #.#####.#.###.#####.###.#.#.#.###.#.#.#.#.#.#.#.###.#########.#.#.#.#.###########
            # #.......#...#.....#.#.....#...#.#.#...#.#...#.#...#.....#...#.#.#.#.....#.......#
            # #C#########.#####.#.#.#######.#.#.###.#.#.###.###.#####.#.###.#.#######.###.###.#
            # #.#.......#.#.#...#...#...#.....#...#...#.......#.#.....#.#...#.....#.#...#...#.#
            # #.###.#.#.#.#.#.###.###.#.#########.###.#####.###.#.#####.#.#####.#.#.###.###.###
            # #...#.#.#.#.#.#.#y..#...#...#.....#.#...#.....#...#.#.....#...#...#.....#...#...#
            # ###.###.#I#.#.#.###########.#.###.#.#####.#####.###.#.###.#####.###########.#.#.#
            # #...#...#.#.#.#...........#...#...#.#...#...#...#.#...#...#.....#.........#.#.#.#
            # #.###.###.#.#.#####.###########.###.#.#.#####.###.#.#####.###.###.#######.#.###.#
            # #.....#...#...#...#.............#.....#.#.....#...#.#...#.....#...#.....#...#...#
            # #####.#######.#.#.###############.#####.#.#######.#.#.#.#####.#.###.###.#####.###
            # #.....#.....#...#.#...#.............#...#.......#...#.#.#.....#.#.#.#.#.........#
            # #.#####.###.#####.#.###.###########.#.###.#####.#####.#.#######.#.#.#.#########.#
            # #...#.#.#.#.......#...........#...#.#...#.....#.......#...#.....#...#.....#...#.#
            # ###.#.#.#.###############.#####.#.#.###.#####.###########.#.#######.###.###.#.#.#
            # #...#.#...#.......#.....#.#.....#.#...#.#.....#...#.....#...#.....#.#...#...#...#
            # #.###.###.#.#####.#.###.###.#####.#####.#.#####.###.###.#####.###.#.#.###.#####.#
            # #.#.....#.#...#.....#...#...#.....#.....#...#.......#...#.....#.#.#...#...#.....#
            # #.###L#.#.#.#.#######.###.###.#####.###.###.#.#######.#.###.###.#.###.#.###.#####
            # #o..#.#.#.#.#.....#.#.#...#.#...#...#.#.#.#.#.....#...#.....#.#...#...#.#.......#
            # ###.###.#.#######.#.#.#.#.#.###.#.###.#.#.#.#######.#########.#.#######.#######.#
            # #.#...#.#.......#.#.#.#.#.#.#...#.#...#.#.#.#...#...#.........#.#.....#.......#.#
            # #.###.#.#######.#.#.#.###.#.#.###.#.###.#.#.#.#.#.###.#######.#.#.###.#######.#.#
            # #.............#...#.......#.......#....@#@....#...#.........#.....#...........#.#
            # #################################################################################
            # #.....#.....#.#.........#.#...#.....#..@#@......#..u........#...#.......#.....Q.#
            # #.#.###.#.#.#.#.#######.#.#.#.#.#.###.#.#.#.###.#.#########.###.#.#.###.#######.#
            # #.#.#...#.#.#.#.....#...#.R.#.#.#.....#.#.#...#...#.......#r....#.#...#.........#
            # #.#.#.###.#.#.#####.###.#####.#.#######.#.###.#######.###.#####.#.###.#####.#####
            # #.#...#...#.......#...#.....#.#.#.#...#.#.#.#...#...#.#...#.....#b#.#...#...#..c#
            # #.#####.#############.#####.#.#.#.#.#.#.#.#.###.#.#.#.#.###.#####.#.###.#####.#.#
            # #p#...V.#..x#.......#...#...#.....#.#...#.#...#.#.#...#...#.#.#...#...#.....#.#.#
            # ###.#####.#.#.#####.###.#.###U#####.###.#.#.#.#.#.#######.#.#.#.###.#.#####.#.#.#
            # #...#.....#.....#...#...#.#.#.#.....#.#.#...#.#.#.#...#.#.#...#...#.#.....#...#.#
            # #.###.###########.###.###.#.#.#.#####.#.#.#####.#.#.#.#.#.###.###.#.#####.#####.#
            # #.......#.......#...#.#.#.#...#...#.....#.#...#.#.#.#.#...#...#.#.#.....#...#.#.#
            # #.#####.#.#####.###.#.#.#.#.#####.#######.#.#.#.#.#H#.###.#.###.#.#.###.###.#.#.#
            # #.#...#.#.#...#.....#.#...#.....#...#...#.#.#...#.#.#...#.#.....#.#...#.#.#...#.#
            # #.#.#.###.#.#######.#.###.#########.#.#.###.#####.#.###.###.#####.#####.#.###.#.#
            # #.#.#.....#...#.....#...#.#.......#...#.#...#.....#.#.#.....#...#.......#.....#.#
            # #.#.#########.#.#######.#.#.#####.#####.#.###.#.###.#.#######.#.#########.#####.#
            # #.#.........#.#.#.#.....#...#...#.....#.#...#.#.#.........#...#...#.....#...#...#
            # #.#########.#.#.#.#.#########.#.#####.#.#.#.#.###.#########.###.###.#.#####.#.#.#
            # #.#.......#.#.#...#.#.......#.#.....#.#.#.#.#.....#.#.........#.#...#.#.....#.#.#
            # #.#######.#.#.###.#.###.#####.#####.#.#.#.#.###.###.#.#########.#.###.#.#####.#.#
            # #......z..#.#.#...#...#.....#.#.....#.#.#.#...#.....#.......#.#.#.#.#...#...#.#.#
            # #########.#.#.#.#######.###.#.#.###.#.#.#.###.###########.###.#.#.#.#######.#.#.#
            # #.#.......#.#...#.....#.#.#.#.#.#...#.#.#.#.#.............#...#.#.......#...#.#.#
            # #.#.#######.#.###.#.#.#.#.#.#.#.#.###.#.#.#.###############.###.#######.#.###.#.#
            # #...#.......#...#.#.#.#...#...#.#...#.#.#....j#...#...#....d#...#...#...#...#.#.#
            # #.###.#########.###.#.###.#####.#####.#.#####.#.###.#.#.#######.#.#.#.#####.#.#.#
            # #...#.#.......#.#...#...#...#.#.....#...#...#.#.....#.#.Z.#.....#.#...#.....#.#.#
            # #D###.#####.###.#.#####.###.#.#####.###.###.#.#######.###.###.###.#######.###.#.#
            # #.#...#...#..n#...#.N.#.#...#.....#.....#...#.....#...#.#...#.....#.....#.#...#.#
            # ###.###.#.###.#######.#.#.#####.#.#######.#######.#.#.#.###.#.#####.###.#.#.###W#
            # #...#...#.............#.#.....#.#.....M.#.#.......#.#...#...#.......#.....#...#.#
            # #.###.#.###############.#####.###.#####.#.#.#######.###.#.#######.#####.#####.#.#
            # #.#.P.#...#...#.......#.#...#.....#...#.#.#...#.....#...#...#.#...#...#.#.....#i#
            # #.#######.#.#.#.#####.#.#.#.#######.#.#.#.###.###.###.#####.#.#.###.#.###.#####.#
            # #.......#...#.......#...#.#.......#.#...#...#....f#.E.#...#.#.....#.#.#...#.O.#.#
            # #.#####.#################.###.#####.#####.#########.#####.#.#######X#.#.###.#.###
            # #.#.#...#...#...T...#.A.#...#..k..#.#...#.#...#...#.#...#.#.....#...#.#.....#...#
            # #.#.#.###.#.#.#####.#.#.###.#####.#.#.#.#.#.#.#.#.#.#.#.#.#####.#.###.#########.#
            # #...#.....#.......#...#.........#.Y...#.#..s#...#..g..#.......#v..#............l#
            # #################################################################################
            # """, 1640)
        ]

        for name, grid_str, expected in cases:
            with self.subTest(case=name):
                got = self.grid_input(grid_str)
                self.assertEqual(
                    got, expected,
                    msg=f'{name}: expected {expected}, got {got}'
                )


if __name__ == "__main__":
    unittest.main()
