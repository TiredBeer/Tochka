import textwrap
import unittest
from run2 import solve
from stress_test_run2 import naive_solve
from parameterized import parameterized


class TestMazeRobots(unittest.TestCase):
    def grid_input(self, input: str) -> int:
        grid = [list(line) for line in
                textwrap.dedent(input).strip().splitlines()]
        return solve(grid)

    @parameterized.expand([
        ("example1", """
         #######
         #a.#Cd#
         ##@#@##
         #######
         ##@#@##
         #cB#Ab#
         #######
         """, 8),

        ("example2", """
         ###############
         #d.ABC.#.....a#
         ######@#@######
         ###############
         ######@#@######
         #b.....#.....c#
         ###############
         """, 24),

        ("example4", """
             @@@..
             #####
             .....
             @A..a
             """, 6),

        ("example5", """
             @@@##
             #####
             .a.#B
             @#.Ab
             """, 6),

        ("example6", """
             @@@##
             ....b
             .a.#B
             @#.A.
             """, 5),

        ("example7", """
             @@@.c
             .....
             .a.#B
             @#...
             """, 4),

        ("one_step", """
             @a....@
             .......
             @.....@
             """, 1),

        ("zero_step", """
             @@
             @@
             """, 0),

        ("line1", """
             @@@@
             """, 0),

        ("line2", """
             @@@@aAbBC
             """, 3),

        ("no_keys", """
             #####
             #@.@#
             #...#
             #@.@#
             #####
             """, 0),

        ("one_key_center", """
            #####
            #@..@#
            #.a.#
            #@..@#
            #####
            """, 2),

        ("key_behind_door_accessible", """
             #####
             #@A@#
             #a.@#
             #@..#
             #####
             """, 1),

        ("for_A*", """
             @@@###################
             ######################
             @..#...#...#...#....a.
             .#.#.#.#.#.#.#.#.####.
             .#.#.#.#.#.#.#.#.####.
             .#.#.#.#.#.#.#.#.####.
             .#...#...#...#...####.
             .####################.
             ......................
             """, 34),

        ("many_keys", """
             #############
             #DcBa.#.GhKl#
             #.###@#@#I###
             #e#d#####j#k#
             ###C#@#@###J#
             #fEbA.#.FgHi#
             #############
             """, 32),

        ("big_grid", """
        #################################################################################
        #...#.......#....a..#...........#..e....#.....#...#...#...........#.............#
        #.#.#.#####.#.#####.#.#######.###.###.#.#.###.#.#.###.#.#########.#.###.#######.#
        #.#.#.#.#...#.#.K...#...#...#.....#.#.#.#.#.....#.#...#t......#...#.#...#.......#
        #.###B#.#.#.#.#.#######.###.#######.#.###.#######.#.#########.#.#####.###.#######
        #.#q..#.#.#.#.#...#.....#...#.......#...#...#.#...#.........#.#.......#.#.#.....#
        #.#.###.#.#.#.###.#.#####.#.#.#####.###.###.#.#.#####.#######.#########.#.###.#.#
        #...#...#.#.#...#.#.......#...#.....#...#...#.........#.....#.......#.#...#m..#.#
        #.#####.#.#####.#.#######.#########.#.###F#############.###.###.###.#.#.###.#####
        #...#...#.......#.......#.#......h#.#...#.#.....#.......#.....#.#...#.#.#.......#
        ###.#.###########.#####.#.#.#####.#####.#.#.###.#.#####.#####.#.#.###G#.###.###.#
        #.#.#.......#...#...#...#.#...J.#.#.....#.#...#.#.....#.#...#.#.#.#...#...#...#.#
        #.#.#####.###.#.###.#####.#####.#.#.###.#.###.#.#####.#.#.#.#.###.#.#.###.#####S#
        #w#...#...#...#...#...#...#...#.#...#...#.#...#.....#.#.#.#.#.....#.#...#.......#
        #.###.#.###.#####.###.#.#####.#.#####.###.#.###.###.#.###.#.#######.###.#######.#
        #...#...#...#.....#...#.#...#.#...#.#.#.#.#.#.#.#...#.....#...#...#.#.#.........#
        #.#####.#.###.#####.###.#.#.#.###.#.#.#.#.#.#.#.###.#########.#.#.#.#.###########
        #.......#...#.....#.#.....#...#.#.#...#.#...#.#...#.....#...#.#.#.#.....#.......#
        #C#########.#####.#.#.#######.#.#.###.#.#.###.###.#####.#.###.#.#######.###.###.#
        #.#.......#.#.#...#...#...#.....#...#...#.......#.#.....#.#...#.....#.#...#...#.#
        #.###.#.#.#.#.#.###.###.#.#########.###.#####.###.#.#####.#.#####.#.#.###.###.###
        #...#.#.#.#.#.#.#y..#...#...#.....#.#...#.....#...#.#.....#...#...#.....#...#...#
        ###.###.#I#.#.#.###########.#.###.#.#####.#####.###.#.###.#####.###########.#.#.#
        #...#...#.#.#.#...........#...#...#.#...#...#...#.#...#...#.....#.........#.#.#.#
        #.###.###.#.#.#####.###########.###.#.#.#####.###.#.#####.###.###.#######.#.###.#
        #.....#...#...#...#.............#.....#.#.....#...#.#...#.....#...#.....#...#...#
        #####.#######.#.#.###############.#####.#.#######.#.#.#.#####.#.###.###.#####.###
        #.....#.....#...#.#...#.............#...#.......#...#.#.#.....#.#.#.#.#.........#
        #.#####.###.#####.#.###.###########.#.###.#####.#####.#.#######.#.#.#.#########.#
        #...#.#.#.#.......#...........#...#.#...#.....#.......#...#.....#...#.....#...#.#
        ###.#.#.#.###############.#####.#.#.###.#####.###########.#.#######.###.###.#.#.#
        #...#.#...#.......#.....#.#.....#.#...#.#.....#...#.....#...#.....#.#...#...#...#
        #.###.###.#.#####.#.###.###.#####.#####.#.#####.###.###.#####.###.#.#.###.#####.#
        #.#.....#.#...#.....#...#...#.....#.....#...#.......#...#.....#.#.#...#...#.....#
        #.###L#.#.#.#.#######.###.###.#####.###.###.#.#######.#.###.###.#.###.#.###.#####
        #o..#.#.#.#.#.....#.#.#...#.#...#...#.#.#.#.#.....#...#.....#.#...#...#.#.......#
        ###.###.#.#######.#.#.#.#.#.###.#.###.#.#.#.#######.#########.#.#######.#######.#
        #.#...#.#.......#.#.#.#.#.#.#...#.#...#.#.#.#...#...#.........#.#.....#.......#.#
        #.###.#.#######.#.#.#.###.#.#.###.#.###.#.#.#.#.#.###.#######.#.#.###.#######.#.#
        #.............#...#.......#.......#....@#@....#...#.........#.....#...........#.#
        #################################################################################
        #.....#.....#.#.........#.#...#.....#..@#@......#..u........#...#.......#.....Q.#
        #.#.###.#.#.#.#.#######.#.#.#.#.#.###.#.#.#.###.#.#########.###.#.#.###.#######.#
        #.#.#...#.#.#.#.....#...#.R.#.#.#.....#.#.#...#...#.......#r....#.#...#.........#
        #.#.#.###.#.#.#####.###.#####.#.#######.#.###.#######.###.#####.#.###.#####.#####
        #.#...#...#.......#...#.....#.#.#.#...#.#.#.#...#...#.#...#.....#b#.#...#...#..c#
        #.#####.#############.#####.#.#.#.#.#.#.#.#.###.#.#.#.#.###.#####.#.###.#####.#.#
        #p#...V.#..x#.......#...#...#.....#.#...#.#...#.#.#...#...#.#.#...#...#.....#.#.#
        ###.#####.#.#.#####.###.#.###U#####.###.#.#.#.#.#.#######.#.#.#.###.#.#####.#.#.#
        #...#.....#.....#...#...#.#.#.#.....#.#.#...#.#.#.#...#.#.#...#...#.#.....#...#.#
        #.###.###########.###.###.#.#.#.#####.#.#.#####.#.#.#.#.#.###.###.#.#####.#####.#
        #.......#.......#...#.#.#.#...#...#.....#.#...#.#.#.#.#...#...#.#.#.....#...#.#.#
        #.#####.#.#####.###.#.#.#.#.#####.#######.#.#.#.#.#H#.###.#.###.#.#.###.###.#.#.#
        #.#...#.#.#...#.....#.#...#.....#...#...#.#.#...#.#.#...#.#.....#.#...#.#.#...#.#
        #.#.#.###.#.#######.#.###.#########.#.#.###.#####.#.###.###.#####.#####.#.###.#.#
        #.#.#.....#...#.....#...#.#.......#...#.#...#.....#.#.#.....#...#.......#.....#.#
        #.#.#########.#.#######.#.#.#####.#####.#.###.#.###.#.#######.#.#########.#####.#
        #.#.........#.#.#.#.....#...#...#.....#.#...#.#.#.........#...#...#.....#...#...#
        #.#########.#.#.#.#.#########.#.#####.#.#.#.#.###.#########.###.###.#.#####.#.#.#
        #.#.......#.#.#...#.#.......#.#.....#.#.#.#.#.....#.#.........#.#...#.#.....#.#.#
        #.#######.#.#.###.#.###.#####.#####.#.#.#.#.###.###.#.#########.#.###.#.#####.#.#
        #......z..#.#.#...#...#.....#.#.....#.#.#.#...#.....#.......#.#.#.#.#...#...#.#.#
        #########.#.#.#.#######.###.#.#.###.#.#.#.###.###########.###.#.#.#.#######.#.#.#
        #.#.......#.#...#.....#.#.#.#.#.#...#.#.#.#.#.............#...#.#.......#...#.#.#
        #.#.#######.#.###.#.#.#.#.#.#.#.#.###.#.#.#.###############.###.#######.#.###.#.#
        #...#.......#...#.#.#.#...#...#.#...#.#.#....j#...#...#....d#...#...#...#...#.#.#
        #.###.#########.###.#.###.#####.#####.#.#####.#.###.#.#.#######.#.#.#.#####.#.#.#
        #...#.#.......#.#...#...#...#.#.....#...#...#.#.....#.#.Z.#.....#.#...#.....#.#.#
        #D###.#####.###.#.#####.###.#.#####.###.###.#.#######.###.###.###.#######.###.#.#
        #.#...#...#..n#...#.N.#.#...#.....#.....#...#.....#...#.#...#.....#.....#.#...#.#
        ###.###.#.###.#######.#.#.#####.#.#######.#######.#.#.#.###.#.#####.###.#.#.###W#
        #...#...#.............#.#.....#.#.....M.#.#.......#.#...#...#.......#.....#...#.#
        #.###.#.###############.#####.###.#####.#.#.#######.###.#.#######.#####.#####.#.#
        #.#.P.#...#...#.......#.#...#.....#...#.#.#...#.....#...#...#.#...#...#.#.....#i#
        #.#######.#.#.#.#####.#.#.#.#######.#.#.#.###.###.###.#####.#.#.###.#.###.#####.#
        #.......#...#.......#...#.#.......#.#...#...#....f#.E.#...#.#.....#.#.#...#.O.#.#
        #.#####.#################.###.#####.#####.#########.#####.#.#######X#.#.###.#.###
        #.#.#...#...#...T...#.A.#...#..k..#.#...#.#...#...#.#...#.#.....#...#.#.....#...#
        #.#.#.###.#.#.#####.#.#.###.#####.#.#.#.#.#.#.#.#.#.#.#.#.#####.#.###.#########.#
        #...#.....#.......#...#.........#.Y...#.#..s#...#..g..#.......#v..#............l#
        #################################################################################
        """, 1640)
    ])
    def test_maze(self, name, grid_str, expected):
        self.assertEqual(self.grid_input(grid_str), expected)


if __name__ == "__main__":
    unittest.main()
